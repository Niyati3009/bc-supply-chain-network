/* 

* Licensed under the Apache License, Version 2.0 (the "License"); 

* you may not use this file except in compliance with the License. 

* You may obtain a copy of the License at 

* 

* http://www.apache.org/licenses/LICENSE-2.0 

* 

* Unless required by applicable law or agreed to in writing, software 

* distributed under the License is distributed on an "AS IS" BASIS, 

* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 

* See the License for the specific language governing permissions and 

* limitations under the License. 

*/ 

  

rule SystemACL { 

description: "System ACL to permit all access" 

    participant: "org.hyperledger.composer.system.Participant" 

    operation: ALL 

    resource: "org.hyperledger.composer.system.**" 

    action: ALLOW 

} 

  

rule NetworkAdminUser { 

    description: "Grant business network administrators full access to user resources" 

    participant: "org.hyperledger.composer.system.NetworkAdmin" 

    operation: ALL 

    resource: "**" 

    action: ALLOW 

} 

  

rule NetworkAdminSystem { 

    description: "Grant business network administrators full access to system resources" 

    participant: "org.hyperledger.composer.system.NetworkAdmin" 

    operation: ALL 

    resource: "org.hyperledger.composer.system.**" 

    action: ALLOW 

} 

  

rule ReadCommodity { 

   	description: "All participants can read their own goods" 

    participant(p): "org.bc.supplychain.network.*" 

    operation: READ 

    resource(r): "org.bc.supplychain.network.Commodity" 

  	condition: (r.owner.getIdentifier() == p.getIdentifier()) 

    action: ALLOW 

} 

  

rule CreateTransferCommodity { 

   	description: "All participants can access TransferCommodity transaction" 

    participant: "org.bc.supplychain.network.*" 

    operation: CREATE 

    resource: "org.bc.supplychain.network.TransferCommodity" 

    action: ALLOW 

} 

  

rule OnlyTransferByTransferCommodity { 

   	description: "Allow all participants to transfer its own commodity by TransferCommodity" 

    participant(p): "org.bc.supplychain.network.*" 

    operation: UPDATE 

    resource(r): "org.bc.supplychain.network.*" 

  	transaction(tx): "org.bc.supplychain.network.TransferCommodity" 

  	condition: (r.owner.getIdentifier() == p.getIdentifier()) 

    action: ALLOW 

} 

  

rule ReadOwnTransactionRecords { 

   	description: "Grant all participants to read their own transaction records" 

    participant(p): "org.bc.supplychain.network.*" 

    operation: READ 

    resource(r): "org.bc.supplychain.network.TransferCommodity" 

  	condition: (r.issuer.getIdentifier() == p.getIdentifier()) 

    action: ALLOW 

} 

  

rule ReadOwnTransactionRecordsNewOwner { 

   	description: "Grant new owner to read their own transaction records" 

    participant(p): "org.bc.supplychain.network.*" 

    operation: READ 

    resource(r): "org.bc.supplychain.network.TransferCommodity" 

  	condition: (r.newOwner.getIdentifier() == p.getIdentifier()) 

    action: ALLOW 

} 

  

rule CreateOwnResource { 

   	description: "Grant all partcipants to create its own resource" 

    participant(p): "org.bc.supplychain.network.*" 

    operation: CREATE 

    resource(r): "org.bc.supplychain.network.Commodity" 

  	condition: (r.owner.getIdentifier() == p.getIdentifier()) 

    action: ALLOW 

} 
